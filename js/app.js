(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _modulesCurrencyConverter = require('./modules/currency-converter');

var _modulesCurrencyConverter2 = _interopRequireDefault(_modulesCurrencyConverter);

console.log(_modulesCurrencyConverter2["default"]);

document.querySelectorAll("[data-currency-conversion]").forEach(function (form) {
	form.addEventListener("submit", function (e) {

		var initialCurrencyAmount = this.querySelector("[data-initial-currency]").value,
		    initialCurrencyType = this.querySelector("[data-initial-currency-type]").value,
		    convertedCurrencyAmount = this.querySelector("[data-converted-currency]").value,
		    convertedCurrencyType = this.querySelector("[data-converted-currency-type]").value,
		    convertedCurrencyResult;

		convertedCurrencyResult = (0, _modulesCurrencyConverter2["default"])({
			initialCurrencyAmount: initialCurrencyAmount,
			initialCurrencyType: initialCurrencyType,
			convertedCurrencyAmount: convertedCurrencyAmount,
			convertedCurrencyType: convertedCurrencyType
		}).then(function (data) {
			console.log(data);
		});

		e.preventDefault();
	});
});

},{"./modules/currency-converter":2}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports["default"] = convertCurrency;

function convertCurrency(conversionData) {

	// Check if either currency is BitCoin

	if ((conversionData.initialCurrencyType === "XBT" || conversionData.convertedCurrencyType === "XBT") && conversionData.initialCurrencyType !== conversionData.convertedCurrencyType) {

		var bitcoinGBP = fetch('https://api.coindesk.com/v1/bpi/currentprice/gbp.json').then(function (response) {
			return response.json();
		}).then(function (data) {
			return data.bpi.GBP.rate_float;
		});

		var bitcoinEUR = fetch('https://api.coindesk.com/v1/bpi/currentprice/eur.json').then(function (response) {
			return response.json();
		}).then(function (data) {
			return data.bpi.EUR.rate_float;
		});

		var combinedData = { "bitcoinGBP": {}, "bitcoinEUR": {} };

		var totalData = Promise.all([bitcoinGBP, bitcoinEUR]).then(function (values) {
			combinedData["bitcoinGBP"] = values[0];
			combinedData["bitcoinEUR"] = values[1];

			return combinedData;
		});

		return totalData;
	}
}

module.exports = exports["default"];

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvamFtZXNob3dlbGwvU2l0ZXMvYml0Y29pbi1jdXJyZW5jeS1jb252ZXJ0ZXIvc3JjL2pzL2FwcC5qcyIsIi9Vc2Vycy9qYW1lc2hvd2VsbC9TaXRlcy9iaXRjb2luLWN1cnJlbmN5LWNvbnZlcnRlci9zcmMvanMvbW9kdWxlcy9jdXJyZW5jeS1jb252ZXJ0ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O3dDQ0E0Qiw4QkFBOEI7Ozs7QUFFMUQsT0FBTyxDQUFDLEdBQUcsdUNBQWlCLENBQUM7O0FBRTdCLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFTLElBQUksRUFBQztBQUM3RSxLQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLFVBQVMsQ0FBQyxFQUFDOztBQUUxQyxNQUNBLHFCQUFxQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMseUJBQXlCLENBQUMsQ0FBQyxLQUFLO01BQzNFLG1CQUFtQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsOEJBQThCLENBQUMsQ0FBQyxLQUFLO01BQzlFLHVCQUF1QixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsMkJBQTJCLENBQUMsQ0FBQyxLQUFLO01BQy9FLHFCQUFxQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsZ0NBQWdDLENBQUMsQ0FBQyxLQUFLO01BQ2xGLHVCQUF1QixDQUFDOztBQUl4Qix5QkFBdUIsR0FBRywyQ0FBZ0I7QUFDekMsd0JBQXFCLEVBQUUscUJBQXFCO0FBQzVDLHNCQUFtQixFQUFFLG1CQUFtQjtBQUN4QywwQkFBdUIsRUFBRSx1QkFBdUI7QUFDaEQsd0JBQXFCLEVBQUUscUJBQXFCO0dBQzVDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBUyxJQUFJLEVBQUM7QUFDckIsVUFBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUNsQixDQUFDLENBQUM7O0FBR0gsR0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO0VBQ25CLENBQUMsQ0FBQztDQUNILENBQUMsQ0FBQzs7Ozs7Ozs7cUJDNUJxQixlQUFlOztBQUF4QixTQUFTLGVBQWUsQ0FBQyxjQUFjLEVBQUU7Ozs7QUFJdkQsS0FBSyxDQUFDLGNBQWMsQ0FBQyxtQkFBbUIsS0FBSyxLQUFLLElBQUssY0FBYyxDQUFDLHFCQUFxQixLQUFLLEtBQUssQ0FBQSxJQUFNLGNBQWMsQ0FBQyxtQkFBbUIsS0FBSyxjQUFjLENBQUMscUJBQXFCLEVBQUc7O0FBR3hMLE1BQUksVUFBVSxHQUFHLEtBQUssQ0FBQyx1REFBdUQsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLFFBQVEsRUFBQztBQUN0RyxVQUFPLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtHQUN0QixDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVMsSUFBSSxFQUFDO0FBQ3JCLFVBQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDO0dBQy9CLENBQUMsQ0FBQzs7QUFHSCxNQUFJLFVBQVUsR0FBRyxLQUFLLENBQUMsdURBQXVELENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBUyxRQUFRLEVBQUM7QUFDdEcsVUFBTyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUE7R0FDdEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLElBQUksRUFBQztBQUNyQixVQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQztHQUMvQixDQUFDLENBQUM7O0FBR0gsTUFBSSxZQUFZLEdBQUcsRUFBQyxZQUFZLEVBQUMsRUFBRSxFQUFDLFlBQVksRUFBQyxFQUFFLEVBQUMsQ0FBQzs7QUFHckQsTUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFVBQVUsRUFBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLE1BQU0sRUFBQztBQUN6RSxlQUFZLENBQUMsWUFBWSxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZDLGVBQVksQ0FBQyxZQUFZLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7O0FBRXZDLFVBQU8sWUFBWSxDQUFDO0dBQ3BCLENBQUMsQ0FBQzs7QUFFSCxTQUFPLFNBQVMsQ0FBQztFQUdqQjtDQUVEIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImltcG9ydCBjb252ZXJ0Q3VycmVuY3kgZnJvbSAnLi9tb2R1bGVzL2N1cnJlbmN5LWNvbnZlcnRlcic7XG5cbmNvbnNvbGUubG9nKGNvbnZlcnRDdXJyZW5jeSk7XG5cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1jdXJyZW5jeS1jb252ZXJzaW9uXVwiKS5mb3JFYWNoKGZ1bmN0aW9uKGZvcm0pe1xuXHRmb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgZnVuY3Rpb24oZSl7XG5cblx0XHR2YXJcblx0XHRpbml0aWFsQ3VycmVuY3lBbW91bnQgPSB0aGlzLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1pbml0aWFsLWN1cnJlbmN5XVwiKS52YWx1ZSxcblx0XHRpbml0aWFsQ3VycmVuY3lUeXBlID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaW5pdGlhbC1jdXJyZW5jeS10eXBlXVwiKS52YWx1ZSxcblx0XHRjb252ZXJ0ZWRDdXJyZW5jeUFtb3VudCA9IHRoaXMucXVlcnlTZWxlY3RvcihcIltkYXRhLWNvbnZlcnRlZC1jdXJyZW5jeV1cIikudmFsdWUsXG5cdFx0Y29udmVydGVkQ3VycmVuY3lUeXBlID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtY29udmVydGVkLWN1cnJlbmN5LXR5cGVdXCIpLnZhbHVlLFxuXHRcdGNvbnZlcnRlZEN1cnJlbmN5UmVzdWx0O1xuXG5cdFx0XG5cblx0XHRjb252ZXJ0ZWRDdXJyZW5jeVJlc3VsdCA9IGNvbnZlcnRDdXJyZW5jeSh7XG5cdFx0XHRpbml0aWFsQ3VycmVuY3lBbW91bnQ6IGluaXRpYWxDdXJyZW5jeUFtb3VudCxcblx0XHRcdGluaXRpYWxDdXJyZW5jeVR5cGU6IGluaXRpYWxDdXJyZW5jeVR5cGUsXG5cdFx0XHRjb252ZXJ0ZWRDdXJyZW5jeUFtb3VudDogY29udmVydGVkQ3VycmVuY3lBbW91bnQsXG5cdFx0XHRjb252ZXJ0ZWRDdXJyZW5jeVR5cGU6IGNvbnZlcnRlZEN1cnJlbmN5VHlwZVxuXHRcdH0pLnRoZW4oZnVuY3Rpb24oZGF0YSl7XG5cdFx0XHRjb25zb2xlLmxvZyhkYXRhKTtcblx0XHR9KTtcblxuXG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHR9KTtcbn0pOyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbnZlcnRDdXJyZW5jeShjb252ZXJzaW9uRGF0YSkge1xuXG5cdC8vIENoZWNrIGlmIGVpdGhlciBjdXJyZW5jeSBpcyBCaXRDb2luXG5cblx0aWYgKCAoY29udmVyc2lvbkRhdGEuaW5pdGlhbEN1cnJlbmN5VHlwZSA9PT0gXCJYQlRcIiB8fCAgY29udmVyc2lvbkRhdGEuY29udmVydGVkQ3VycmVuY3lUeXBlID09PSBcIlhCVFwiKSAmJiAgY29udmVyc2lvbkRhdGEuaW5pdGlhbEN1cnJlbmN5VHlwZSAhPT0gY29udmVyc2lvbkRhdGEuY29udmVydGVkQ3VycmVuY3lUeXBlICkge1xuXG5cblx0XHR2YXIgYml0Y29pbkdCUCA9IGZldGNoKCdodHRwczovL2FwaS5jb2luZGVzay5jb20vdjEvYnBpL2N1cnJlbnRwcmljZS9nYnAuanNvbicpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpeyBcblx0XHRcdHJldHVybiByZXNwb25zZS5qc29uKClcblx0XHR9KS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0cmV0dXJuIGRhdGEuYnBpLkdCUC5yYXRlX2Zsb2F0O1xuXHRcdH0pO1xuXHRcblxuXHRcdHZhciBiaXRjb2luRVVSID0gZmV0Y2goJ2h0dHBzOi8vYXBpLmNvaW5kZXNrLmNvbS92MS9icGkvY3VycmVudHByaWNlL2V1ci5qc29uJykudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XG5cdFx0XHRyZXR1cm4gcmVzcG9uc2UuanNvbigpXG5cdFx0fSkudGhlbihmdW5jdGlvbihkYXRhKXtcblx0XHRcdHJldHVybiBkYXRhLmJwaS5FVVIucmF0ZV9mbG9hdDtcblx0XHR9KTtcblx0XG5cblx0XHR2YXIgY29tYmluZWREYXRhID0ge1wiYml0Y29pbkdCUFwiOnt9LFwiYml0Y29pbkVVUlwiOnt9fTtcblx0XG5cblx0XHR2YXIgdG90YWxEYXRhID0gUHJvbWlzZS5hbGwoW2JpdGNvaW5HQlAsYml0Y29pbkVVUl0pLnRoZW4oZnVuY3Rpb24odmFsdWVzKXtcblx0XHRcdGNvbWJpbmVkRGF0YVtcImJpdGNvaW5HQlBcIl0gPSB2YWx1ZXNbMF07XG5cdFx0XHRjb21iaW5lZERhdGFbXCJiaXRjb2luRVVSXCJdID0gdmFsdWVzWzFdO1xuXG5cdFx0XHRyZXR1cm4gY29tYmluZWREYXRhO1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIHRvdGFsRGF0YTtcblxuXG5cdH1cblxufVxuIl19
